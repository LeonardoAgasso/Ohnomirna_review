.DELETE_ON_ERROR:


####################### VARS ########################
OM_SINGLES = ohnomirna_singles_predict_Hsa_existent.names.extended_info.flagged_WGD_host_genes.names_only.tsv
PM_SINGLES = all_hsa_ensembl_singles_paralogmirna_clean.mirgenedb_and_mribase_info.host_gene.names_only.tsv
OHNOLOGS = ohnologs.gene_pairs.name.tsv
PARALOGS = paralogs.gene_pairs.name.tsv
PREPPI_INT = preppi.human_af.interactome.exp_ver.translated.clean.tsv
STRING_INT = string_protein_links.v12.0.cutscore_$(STRING_MIN_SCORE).Ensembl_HGNC_ensembl_gene_id2Name.clean.tsv
ALL_DUPLICATED = gene_pairs.name.tsv
NETWORKS = tarbase mirdip
NETW_EDGELISTS = $(foreach ntwk, $(NETWORKS), $(addsuffix .gene.edge, $(ntwk))) $(foreach ntwk, $(NETWORKS), $(addsuffix .gene.mgdb_filtered.edge, $(ntwk)))
N_NM = 1000
PARALLEL_SCRIPTS_CORES := 90
SCRIPT := LambdaFinderPar_ppi $(PARALLEL_SCRIPTS_CORES)
STRING_MIN_SCORE := 960
######################################################

####################### Paths ########################
NM_PATH_PIGEN = ../../../null_models_10k/
OUTPUT_DIR = ./output/
COUNTS_OUTPUT_DIR = ./counts/
DATASET_PATH = ../../../OhnomiRNAs/dataset/
PPI_PARS_FOLDER = $(DATASET_PATH)PPI_parsing/
NTWK_PATH = $(DATASET_PATH)Network_parsing/
NTWK_TB_PATH = $(NTWK_PATH)tarbase/
NTWK_MDT_PATH = $(NTWK_PATH)mirdip/
GENE_PAIRS_DIR = $(DATASET_PATH)gene_pairs/
######################################################




######################### PPI ########################
# PrePPI Interactions
preppi.human_af.interactome.exp_ver.translated.clean.tsv:
	ln -s $(PPI_PARS_FOLDER)$@ ./$@

# STRING Interactions
string_protein_links.v12.0.cutscore_$(STRING_MIN_SCORE).Ensembl_HGNC_ensembl_gene_id2Name.clean.tsv:
	ln -s $(PPI_PARS_FOLDER)$@ ./$@
######################################################


##################### Gene pairs #####################
ohnologs.gene_pairs.name.tsv:
	ln -s $(GENE_PAIRS_DIR)$@ ./$@

paralogs.gene_pairs.name.tsv:
	ln -s $(GENE_PAIRS_DIR)$@ ./$@

paralogs.gene_pairs.name.cut.tsv:
	ln -s $(GENE_PAIRS_DIR)$@ ./$@

gene_pairs.name.tsv:
	ln -s $(GENE_PAIRS_DIR)$@ ./$@
######################################################


##################### miRNA pairs ####################
ohnomirna_pairs_predict_Hsa_existent.names.extended_info.flagged_WGD_host_genes.tsv:
	ln -s ../../2_find_WGD_intragenic/$@ ./$@

all_hsa_ensembl_paralogmirna_clean.mirgenedb_and_mribase_info.host_gene.tsv:
	ln -s ../../4_find_SSD_intragenic/$@ ./$@

ohnomirna_pairs_predict_Hsa_existent.names.extended_info.flagged_WGD_host_genes.names_only.tsv: ohnomirna_pairs_predict_Hsa_existent.names.extended_info.flagged_WGD_host_genes.tsv
	cat $< | awk -F"\t" '{print $$3"\t"$$10}' | sort | uniq | rsort > $@

all_hsa_ensembl_paralogmirna_clean.mirgenedb_and_mribase_info.host_gene.names_only.tsv: all_hsa_ensembl_paralogmirna_clean.mirgenedb_and_mribase_info.host_gene.tsv
	cat $< | awk -F"\t" '{print $$8"\t"$$16}' | sort | uniq | awk -F"\t" 'NR>1' | rsort > $@

ohnomirna_singles_predict_Hsa_existent.names.extended_info.flagged_WGD_host_genes.names_only.tsv: ohnomirna_pairs_predict_Hsa_existent.names.extended_info.flagged_WGD_host_genes.names_only.tsv
	cat $< | awk -F"\t" '{print $$1"\n"$$2}' | grep -v gene_name | sort | uniq | rsort > $@

all_hsa_ensembl_singles_paralogmirna_clean.mirgenedb_and_mribase_info.host_gene.names_only.tsv: all_hsa_ensembl_paralogmirna_clean.mirgenedb_and_mribase_info.host_gene.names_only.tsv
	cat $< | awk -F"\t" '{print $$1"\n"$$2}' | sort | uniq | rsort > $@
######################################################


####################### Networks #####################
%.gene.edge:
	ln -s $(NTWK_PATH)$*/$@ ./$@
######################################################





####################### Output #######################
%_om.z_$(N_NM).preppi.tsv: %.gene.edge $(OM_SINGLES) $(OHNOLOGS) $(PREPPI_INT)  
	cat $(word 1, $^) | $(SCRIPT) $(word 2, $^) $(word 3, $^) $(word 4, $^) $(NM_PATH_PIGEN)nm_$*/ $(N_NM) > $(OUTPUT_DIR)$@

%_pm.z_$(N_NM).preppi.tsv: %.gene.edge $(PM_SINGLES) $(OHNOLOGS) $(PREPPI_INT)  
	cat $(word 1, $^) | $(SCRIPT) $(word 2, $^) $(word 3, $^) $(word 4, $^) $(NM_PATH_PIGEN)nm_$*/ $(N_NM) > $(OUTPUT_DIR)$@
######################################################

